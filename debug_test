#! /usr/bin/vvp
:ivl_version "12.0 (stable)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/system.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_sys.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/vhdl_textio.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2005_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/va_math.vpi";
:vpi_module "/usr/lib/x86_64-linux-gnu/ivl/v2009.vpi";
S_0x55efed22c470 .scope package, "$unit" "$unit" 2 1;
 .timescale 0 0;
S_0x55efed203850 .scope module, "simple_mult_test" "simple_mult_test" 3 5;
 .timescale -9 -12;
v0x55efed250910_0 .var "a", 11 0;
v0x55efed2509f0_0 .var "b", 11 0;
v0x55efed250a90_0 .var "clk", 0 0;
v0x55efed250b30_0 .net "result", 11 0, v0x55efed250070_0;  1 drivers
v0x55efed250c00_0 .var "rst_n", 0 0;
v0x55efed250ca0_0 .var "valid_in", 0 0;
v0x55efed250d70_0 .net "valid_out", 0 0, v0x55efed2506b0_0;  1 drivers
E_0x55efed212cd0 .event posedge, v0x55efed24f630_0;
S_0x55efed208470 .scope module, "dut" "debug_mult" 3 15, 4 3 0, S_0x55efed203850;
 .timescale 0 0;
    .port_info 0 /INPUT 1 "clk";
    .port_info 1 /INPUT 1 "rst_n";
    .port_info 2 /INPUT 12 "a";
    .port_info 3 /INPUT 12 "b";
    .port_info 4 /INPUT 1 "valid_in";
    .port_info 5 /OUTPUT 12 "result";
    .port_info 6 /OUTPUT 1 "valid_out";
P_0x55efed222f70 .param/l "BIAS" 0 4 14, +C4<00000000000000000000000000001111>;
L_0x55efed2615d0 .functor OR 1, L_0x55efed261390, L_0x55efed261460, C4<0>, C4<0>;
L_0x55efed261850 .functor OR 1, L_0x55efed2615d0, L_0x55efed2616e0, C4<0>, C4<0>;
L_0x55efed261b00 .functor OR 1, L_0x55efed261850, L_0x55efed261960, C4<0>, C4<0>;
L_0x7fb903e6e018 .functor BUFT 1, C4<000000000000>, C4<0>, C4<0>, C4<0>;
v0x55efed222cc0_0 .net/2u *"_ivl_12", 11 0, L_0x7fb903e6e018;  1 drivers
v0x55efed213530_0 .net *"_ivl_14", 0 0, L_0x55efed261390;  1 drivers
L_0x7fb903e6e060 .functor BUFT 1, C4<000000000000>, C4<0>, C4<0>, C4<0>;
v0x55efed24e8a0_0 .net/2u *"_ivl_16", 11 0, L_0x7fb903e6e060;  1 drivers
v0x55efed24e960_0 .net *"_ivl_18", 0 0, L_0x55efed261460;  1 drivers
v0x55efed24ea20_0 .net *"_ivl_21", 0 0, L_0x55efed2615d0;  1 drivers
L_0x7fb903e6e0a8 .functor BUFT 1, C4<00000>, C4<0>, C4<0>, C4<0>;
v0x55efed24eb30_0 .net/2u *"_ivl_22", 4 0, L_0x7fb903e6e0a8;  1 drivers
v0x55efed24ec10_0 .net *"_ivl_24", 0 0, L_0x55efed2616e0;  1 drivers
v0x55efed24ecd0_0 .net *"_ivl_27", 0 0, L_0x55efed261850;  1 drivers
L_0x7fb903e6e0f0 .functor BUFT 1, C4<00000>, C4<0>, C4<0>, C4<0>;
v0x55efed24ed90_0 .net/2u *"_ivl_28", 4 0, L_0x7fb903e6e0f0;  1 drivers
v0x55efed24ee70_0 .net *"_ivl_30", 0 0, L_0x55efed261960;  1 drivers
L_0x7fb903e6e138 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55efed24ef30_0 .net/2u *"_ivl_34", 0 0, L_0x7fb903e6e138;  1 drivers
L_0x7fb903e6e180 .functor BUFT 1, C4<1>, C4<0>, C4<0>, C4<0>;
v0x55efed24f010_0 .net/2u *"_ivl_38", 0 0, L_0x7fb903e6e180;  1 drivers
v0x55efed24f0f0_0 .net *"_ivl_42", 13 0, L_0x55efed261f00;  1 drivers
L_0x7fb903e6e1c8 .functor BUFT 1, C4<0000000>, C4<0>, C4<0>, C4<0>;
v0x55efed24f1d0_0 .net *"_ivl_45", 6 0, L_0x7fb903e6e1c8;  1 drivers
v0x55efed24f2b0_0 .net *"_ivl_46", 13 0, L_0x55efed262040;  1 drivers
L_0x7fb903e6e210 .functor BUFT 1, C4<0000000>, C4<0>, C4<0>, C4<0>;
v0x55efed24f390_0 .net *"_ivl_49", 6 0, L_0x7fb903e6e210;  1 drivers
v0x55efed24f470_0 .net "a", 11 0, v0x55efed250910_0;  1 drivers
v0x55efed24f550_0 .net "b", 11 0, v0x55efed2509f0_0;  1 drivers
v0x55efed24f630_0 .net "clk", 0 0, v0x55efed250a90_0;  1 drivers
v0x55efed24f6f0_0 .net "exp_a", 4 0, L_0x55efed250f60;  1 drivers
v0x55efed24f7d0_0 .net "exp_b", 4 0, L_0x55efed2511d0;  1 drivers
v0x55efed24f8b0_0 .var "final_exp", 4 0;
v0x55efed24f990_0 .var "final_frac", 5 0;
v0x55efed24fa70_0 .net "frac_a", 5 0, L_0x55efed251000;  1 drivers
v0x55efed24fb50_0 .net "frac_b", 5 0, L_0x55efed251270;  1 drivers
v0x55efed24fc30_0 .net "frac_mult_result", 13 0, L_0x55efed262200;  1 drivers
v0x55efed24fd10_0 .var "mult_result", 11 0;
v0x55efed24fdf0_0 .net "norm_frac_a", 6 0, L_0x55efed261c10;  1 drivers
v0x55efed24fed0_0 .net "norm_frac_b", 6 0, L_0x55efed261d50;  1 drivers
v0x55efed24ffb0_0 .var "overflow", 0 0;
v0x55efed250070_0 .var "result", 11 0;
v0x55efed250150_0 .var/s "result_exp_temp", 7 0;
v0x55efed250230_0 .net "rst_n", 0 0, v0x55efed250c00_0;  1 drivers
v0x55efed2502f0_0 .net "sign_a", 0 0, L_0x55efed250e40;  1 drivers
v0x55efed2503b0_0 .net "sign_b", 0 0, L_0x55efed2510d0;  1 drivers
v0x55efed250470_0 .var "sign_result", 0 0;
v0x55efed250530_0 .var "underflow", 0 0;
v0x55efed2505f0_0 .net "valid_in", 0 0, v0x55efed250ca0_0;  1 drivers
v0x55efed2506b0_0 .var "valid_out", 0 0;
v0x55efed250770_0 .net "zero_input", 0 0, L_0x55efed261b00;  1 drivers
E_0x55efed214c00/0 .event negedge, v0x55efed250230_0;
E_0x55efed214c00/1 .event posedge, v0x55efed24f630_0;
E_0x55efed214c00 .event/or E_0x55efed214c00/0, E_0x55efed214c00/1;
E_0x55efed213460/0 .event anyedge, v0x55efed2505f0_0, v0x55efed24f470_0, v0x55efed24f550_0, v0x55efed2502f0_0;
E_0x55efed213460/1 .event anyedge, v0x55efed24f6f0_0, v0x55efed24fa70_0, v0x55efed2503b0_0, v0x55efed24f7d0_0;
E_0x55efed213460/2 .event anyedge, v0x55efed24fb50_0, v0x55efed250770_0, v0x55efed24fdf0_0, v0x55efed24fed0_0;
E_0x55efed213460/3 .event anyedge, v0x55efed24fc30_0, v0x55efed250470_0, v0x55efed250150_0, v0x55efed24f990_0;
E_0x55efed213460/4 .event anyedge, v0x55efed250530_0, v0x55efed24ffb0_0, v0x55efed24f8b0_0, v0x55efed24fd10_0;
E_0x55efed213460 .event/or E_0x55efed213460/0, E_0x55efed213460/1, E_0x55efed213460/2, E_0x55efed213460/3, E_0x55efed213460/4;
L_0x55efed250e40 .part v0x55efed250910_0, 11, 1;
L_0x55efed250f60 .part v0x55efed250910_0, 6, 5;
L_0x55efed251000 .part v0x55efed250910_0, 0, 6;
L_0x55efed2510d0 .part v0x55efed2509f0_0, 11, 1;
L_0x55efed2511d0 .part v0x55efed2509f0_0, 6, 5;
L_0x55efed251270 .part v0x55efed2509f0_0, 0, 6;
L_0x55efed261390 .cmp/eq 12, v0x55efed250910_0, L_0x7fb903e6e018;
L_0x55efed261460 .cmp/eq 12, v0x55efed2509f0_0, L_0x7fb903e6e060;
L_0x55efed2616e0 .cmp/eq 5, L_0x55efed250f60, L_0x7fb903e6e0a8;
L_0x55efed261960 .cmp/eq 5, L_0x55efed2511d0, L_0x7fb903e6e0f0;
L_0x55efed261c10 .concat [ 6 1 0 0], L_0x55efed251000, L_0x7fb903e6e138;
L_0x55efed261d50 .concat [ 6 1 0 0], L_0x55efed251270, L_0x7fb903e6e180;
L_0x55efed261f00 .concat [ 7 7 0 0], L_0x55efed261c10, L_0x7fb903e6e1c8;
L_0x55efed262040 .concat [ 7 7 0 0], L_0x55efed261d50, L_0x7fb903e6e210;
L_0x55efed262200 .arith/mult 14, L_0x55efed261f00, L_0x55efed262040;
    .scope S_0x55efed208470;
T_0 ;
    %wait E_0x55efed213460;
    %load/vec4 v0x55efed2505f0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.0, 8;
    %vpi_call/w 4 53 "$display", "DEBUG: Processing inputs a=%b, b=%b", v0x55efed24f470_0, v0x55efed24f550_0 {0 0 0};
    %vpi_call/w 4 54 "$display", "  sign_a=%b, exp_a=%d, frac_a=%b", v0x55efed2502f0_0, v0x55efed24f6f0_0, v0x55efed24fa70_0 {0 0 0};
    %vpi_call/w 4 55 "$display", "  sign_b=%b, exp_b=%d, frac_b=%b", v0x55efed2503b0_0, v0x55efed24f7d0_0, v0x55efed24fb50_0 {0 0 0};
    %vpi_call/w 4 56 "$display", "  zero_input=%b", v0x55efed250770_0 {0 0 0};
    %vpi_call/w 4 57 "$display", "  norm_frac_a=%b (%d), norm_frac_b=%b (%d)", v0x55efed24fdf0_0, v0x55efed24fdf0_0, v0x55efed24fed0_0, v0x55efed24fed0_0 {0 0 0};
    %vpi_call/w 4 58 "$display", "  frac_mult_result=%b (%d)", v0x55efed24fc30_0, v0x55efed24fc30_0 {0 0 0};
T_0.0 ;
    %load/vec4 v0x55efed250770_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.2, 8;
    %pushi/vec4 0, 0, 12;
    %store/vec4 v0x55efed24fd10_0, 0, 12;
    %load/vec4 v0x55efed2505f0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.4, 8;
    %vpi_call/w 4 63 "$display", "  Result: ZERO (zero input)" {0 0 0};
T_0.4 ;
    %jmp T_0.3;
T_0.2 ;
    %load/vec4 v0x55efed2502f0_0;
    %load/vec4 v0x55efed2503b0_0;
    %xor;
    %store/vec4 v0x55efed250470_0, 0, 1;
    %pushi/vec4 0, 0, 3;
    %load/vec4 v0x55efed24f6f0_0;
    %concat/vec4; draw_concat_vec4
    %pushi/vec4 0, 0, 3;
    %load/vec4 v0x55efed24f7d0_0;
    %concat/vec4; draw_concat_vec4
    %add;
    %subi 15, 0, 8;
    %store/vec4 v0x55efed250150_0, 0, 8;
    %load/vec4 v0x55efed2505f0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.6, 8;
    %vpi_call/w 4 72 "$display", "  sign_result=%b", v0x55efed250470_0 {0 0 0};
    %vpi_call/w 4 73 "$display", "  exp calculation: %d + %d - %d = %d", v0x55efed24f6f0_0, v0x55efed24f7d0_0, 32'sb00000000000000000000000000001111, v0x55efed250150_0 {0 0 0};
T_0.6 ;
    %load/vec4 v0x55efed24fc30_0;
    %parti/s 1, 13, 5;
    %cmpi/e 1, 0, 1;
    %jmp/0xz  T_0.8, 4;
    %load/vec4 v0x55efed24fc30_0;
    %parti/s 6, 7, 4;
    %store/vec4 v0x55efed24f990_0, 0, 6;
    %load/vec4 v0x55efed250150_0;
    %addi 1, 0, 8;
    %store/vec4 v0x55efed250150_0, 0, 8;
    %load/vec4 v0x55efed2505f0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.10, 8;
    %vpi_call/w 4 80 "$display", "  Normalize: MSB=1, shift right, final_frac=%b, exp=%d", v0x55efed24f990_0, v0x55efed250150_0 {0 0 0};
T_0.10 ;
    %jmp T_0.9;
T_0.8 ;
    %load/vec4 v0x55efed24fc30_0;
    %parti/s 6, 6, 4;
    %store/vec4 v0x55efed24f990_0, 0, 6;
    %load/vec4 v0x55efed2505f0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.12, 8;
    %vpi_call/w 4 83 "$display", "  Normalize: MSB=0, no shift, final_frac=%b, exp=%d", v0x55efed24f990_0, v0x55efed250150_0 {0 0 0};
T_0.12 ;
T_0.9 ;
    %load/vec4 v0x55efed250150_0;
    %cmpi/s 0, 0, 8;
    %flag_get/vec4 4;
    %flag_get/vec4 5;
    %or;
    %store/vec4 v0x55efed250530_0, 0, 1;
    %pushi/vec4 30, 0, 8;
    %load/vec4 v0x55efed250150_0;
    %cmp/s;
    %flag_get/vec4 4;
    %flag_get/vec4 5;
    %or;
    %store/vec4 v0x55efed24ffb0_0, 0, 1;
    %load/vec4 v0x55efed2505f0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.14, 8;
    %vpi_call/w 4 91 "$display", "  underflow=%b (exp <= 0), overflow=%b (exp >= 30)", v0x55efed250530_0, v0x55efed24ffb0_0 {0 0 0};
T_0.14 ;
    %load/vec4 v0x55efed250530_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.16, 8;
    %pushi/vec4 0, 0, 12;
    %store/vec4 v0x55efed24fd10_0, 0, 12;
    %load/vec4 v0x55efed2505f0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.18, 8;
    %vpi_call/w 4 96 "$display", "  Result: ZERO (underflow)" {0 0 0};
T_0.18 ;
    %jmp T_0.17;
T_0.16 ;
    %load/vec4 v0x55efed24ffb0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.20, 8;
    %pushi/vec4 1968, 0, 12;
    %store/vec4 v0x55efed24fd10_0, 0, 12;
    %load/vec4 v0x55efed2505f0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.22, 8;
    %vpi_call/w 4 99 "$display", "  Result: SATURATED" {0 0 0};
T_0.22 ;
    %jmp T_0.21;
T_0.20 ;
    %load/vec4 v0x55efed250150_0;
    %parti/s 5, 0, 2;
    %store/vec4 v0x55efed24f8b0_0, 0, 5;
    %load/vec4 v0x55efed250470_0;
    %load/vec4 v0x55efed24f8b0_0;
    %concat/vec4; draw_concat_vec4
    %load/vec4 v0x55efed24f990_0;
    %concat/vec4; draw_concat_vec4
    %store/vec4 v0x55efed24fd10_0, 0, 12;
    %load/vec4 v0x55efed2505f0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_0.24, 8;
    %vpi_call/w 4 103 "$display", "  Result: %b (sign=%b, exp=%d, frac=%b)", v0x55efed24fd10_0, v0x55efed250470_0, v0x55efed24f8b0_0, v0x55efed24f990_0 {0 0 0};
T_0.24 ;
T_0.21 ;
T_0.17 ;
T_0.3 ;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_0x55efed208470;
T_1 ;
    %wait E_0x55efed214c00;
    %load/vec4 v0x55efed250230_0;
    %nor/r;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.0, 8;
    %pushi/vec4 0, 0, 12;
    %assign/vec4 v0x55efed250070_0, 0;
    %pushi/vec4 0, 0, 1;
    %assign/vec4 v0x55efed2506b0_0, 0;
    %jmp T_1.1;
T_1.0 ;
    %load/vec4 v0x55efed2505f0_0;
    %assign/vec4 v0x55efed2506b0_0, 0;
    %load/vec4 v0x55efed2505f0_0;
    %flag_set/vec4 8;
    %jmp/0xz  T_1.2, 8;
    %load/vec4 v0x55efed24fd10_0;
    %assign/vec4 v0x55efed250070_0, 0;
T_1.2 ;
T_1.1 ;
    %jmp T_1;
    .thread T_1;
    .scope S_0x55efed203850;
T_2 ;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55efed250a90_0, 0, 1;
T_2.0 ;
    %delay 5000, 0;
    %load/vec4 v0x55efed250a90_0;
    %inv;
    %store/vec4 v0x55efed250a90_0, 0, 1;
    %jmp T_2.0;
    %end;
    .thread T_2;
    .scope S_0x55efed203850;
T_3 ;
    %vpi_call/w 3 33 "$display", "=== Simple Multiplication Debug ===" {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55efed250c00_0, 0, 1;
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55efed250ca0_0, 0, 1;
    %pushi/vec4 0, 0, 12;
    %store/vec4 v0x55efed250910_0, 0, 12;
    %pushi/vec4 0, 0, 12;
    %store/vec4 v0x55efed2509f0_0, 0, 12;
    %delay 20000, 0;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55efed250c00_0, 0, 1;
    %delay 10000, 0;
    %pushi/vec4 992, 0, 12;
    %store/vec4 v0x55efed250910_0, 0, 12;
    %pushi/vec4 1056, 0, 12;
    %store/vec4 v0x55efed2509f0_0, 0, 12;
    %pushi/vec4 1, 0, 1;
    %store/vec4 v0x55efed250ca0_0, 0, 1;
    %vpi_call/w 3 50 "$display", "Input A: %b (sign=%b, exp=%d, frac=%b)", v0x55efed250910_0, &PV<v0x55efed250910_0, 11, 1>, &PV<v0x55efed250910_0, 6, 5>, &PV<v0x55efed250910_0, 0, 6> {0 0 0};
    %vpi_call/w 3 51 "$display", "Input B: %b (sign=%b, exp=%d, frac=%b)", v0x55efed2509f0_0, &PV<v0x55efed2509f0_0, 11, 1>, &PV<v0x55efed2509f0_0, 6, 5>, &PV<v0x55efed2509f0_0, 0, 6> {0 0 0};
    %vpi_call/w 3 52 "$display", "Expected: 010000100000 (sign=0, exp=16, frac=100000)" {0 0 0};
    %wait E_0x55efed212cd0;
    %delay 1000, 0;
    %vpi_call/w 3 57 "$display", "Result:   %b (sign=%b, exp=%d, frac=%b)", v0x55efed250b30_0, &PV<v0x55efed250b30_0, 11, 1>, &PV<v0x55efed250b30_0, 6, 5>, &PV<v0x55efed250b30_0, 0, 6> {0 0 0};
    %vpi_call/w 3 58 "$display", "Valid:    %b", v0x55efed250d70_0 {0 0 0};
    %vpi_call/w 3 65 "$display", "\012Manual calculation:" {0 0 0};
    %vpi_call/w 3 66 "$display", "norm_frac_a = 1.000000 (binary) = 64 (decimal)" {0 0 0};
    %vpi_call/w 3 67 "$display", "norm_frac_b = 1.100000 (binary) = 96 (decimal)" {0 0 0};
    %vpi_call/w 3 68 "$display", "Product = 64 * 96 = 6144" {0 0 0};
    %vpi_call/w 3 69 "$display", "Product binary = 01100000000000 (14 bits)" {0 0 0};
    %vpi_call/w 3 70 "$display", "MSB of product = 0 (bit 13)" {0 0 0};
    %vpi_call/w 3 71 "$display", "Exponent calculation: 15 + 16 - 15 = 16" {0 0 0};
    %pushi/vec4 0, 0, 1;
    %store/vec4 v0x55efed250ca0_0, 0, 1;
    %delay 20000, 0;
    %vpi_call/w 3 76 "$finish" {0 0 0};
    %end;
    .thread T_3;
# The file index is used to find the file name in the following table.
:file_names 5;
    "N/A";
    "<interactive>";
    "-";
    "simple_mult_test.sv";
    "debug_mult.sv";
